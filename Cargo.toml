[package]
name = "noir-compute"
description = "Network of Operators In Rust"
version = "0.1.0"
edition = "2021"
authors = [
    "Luca De Martini <luca.demartini@polimi.it>",
    "Edoardo Morassutto <edoardo.morassutto@gmail.com>",
    "Marco Donadoni <marco.donadoni@mail.polimi.it>"
]
license = "LGPL-3.0-or-later"
repository = "https://github.com/deib-polimi/noir"
homepage = "https://github.com/deib-polimi/noir"
readme = "README.md"

[features]
default = ["flume", "clap", "ssh", "timestamp"]
crossbeam = ["crossbeam-channel"]
timestamp = []
ssh = ["ssh2", "whoami", "shell-escape", "sha2", "base64"]
async-tokio = ["tokio", "flume", "futures", "tokio/net", "tokio/io-util", "tokio/time", "tokio/rt-multi-thread", "tokio/macros"]
profiler = []

[dependencies]
# for logging to the console
log = { version = "0.4.20", features = ["release_max_level_info"] }

# used by the network for storing type-generic structures
typemap_rev = "0.3.0"

# the shuffle() operator requires a random source
nanorand = "0.7.0"

# utility macros for customizing the derive Debug, Default, ...
derivative = "2.2.0"

# serialization library used for reading the config file (yaml) and serializing
# the messages on the network
serde = { version = "1.0.193", features = ["derive"] }
serde_yaml = "0.9.28"
serde_json = "1.0.108"
bincode = "1.3.3"

# handy Result type
anyhow = "1.0.76"
thiserror = "1.0.51"

# handy iterators functions
itertools = "0.12.0"

# for storing non-mutable static variables with non-trivial initialization
once_cell = "1.19.0"

# used for spawning the remote workers
ssh2 = { version = "0.9.4", optional = true }
whoami = { version = "1.4.1", optional = true }
shell-escape = { version = "0.1.5", optional = true }
clap = { version = "4.4.11", features = ["derive"], optional = true }
sha2 = { version = "0.10.8", optional = true }
base64 = { version = "0.21.5", optional = true }

# channel implementation
crossbeam-channel = { version = "0.5.9", optional = true }
flume = { version = "0.11.0", optional = true }

# used for csv file source
csv = "1.3.0"

# Lazy with support for delayed and synchronized initialization
lazy-init = "0.5.1"

# Faster monotonic clock using libc's CLOCK_MONOTONIC_COARSE
coarsetime = "0.1.33"

tokio = { version = "1.35.1", features = ["rt"], default-features = false, optional = true }
futures = { version = "0.3.29", optional = true }

parking_lot = "0.12.1"

wyhash = "0.5.0"
fxhash = "0.2.1"
glidesort = "0.1.2"
indexmap = "2.1.0"
tracing = { version = "0.1.40", features = ["log"] }
quick_cache = "0.4.0"
dyn-clone = "1.0.11"
quantiles = { version = "0.7.1", features = ["serde_support"] }
average = { version = "0.14.1", features = ["serde1"]}
cranelift = "0.105.1"
cranelift-module = "0.105.1"
cranelift-jit = "0.105.1"
cranelift-native = "0.105.1"

[dev-dependencies]
# for the tests
env_logger = "0.10.1"
rand = { version = "0.8.5", features = ["small_rng"] }
tempfile = "3.8.1"
criterion = { version = "0.5.1", features = ["html_reports"] }
fake = "2.9.2"
mimalloc = { version = "0.1.39", default-features = false }
tracing-subscriber = "0.3.18"

micrometer = { version = "0.2.7", features = ["enable"]}

# for the examples
regex = "1.10.2"

# used in the benchmarks
crossbeam-channel = "0.5.9"
flume = "0.11.0"

kstring = { version = "2.0.0", features = ["serde"] }
nexmark = { version = "0.2.0", features = ["serde"] }

[[example]]
name = "nexmark"
required-features = ["timestamp"]

[[example]]
name = "rolling_top_words"
required-features = ["timestamp"]

[[example]]
name = "rolling_top_words_e2e"
required-features = ["timestamp"]

# The list of benchmarks, all of them require "harness = false" in order to
# work with criterion.rs. Cannot set `[lib] harness = false` because the tests
# require the harness.
[[bench]]
name = "collatz"
harness = false
[[bench]]
name = "connected"
harness = false
[[bench]]
name = "wordcount"
harness = false
[[bench]]
name = "shuffle"
harness = false
[[bench]]
name = "fold_vs_reduce"
harness = false
[[bench]]
name = "batch_mode"
harness = false
[[bench]]
name = "nexmark"
harness = false
[[bench]]
name = "csv"
harness = false
[[bench]]
name = "vanilla_vs_optimized"
harness = false

[profile.release]
lto = true
strip = "symbols"
# debug = 1

[profile.release-fast]
inherits = "release"
lto = true
codegen-units = 1
panic = "abort"
